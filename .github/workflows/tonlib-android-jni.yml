name: Tonlib Android JNI

on:
  workflow_dispatch:
  push:

jobs:
  build:

    runs-on: ubuntu-22.04

    steps:
    - name: Check out repository
      uses: actions/checkout@v2
      with:      
        submodules: 'recursive'

    - name: Install libraries
      run: |
        sudo apt update
        sudo apt install -y build-essential git make cmake clang libgflags-dev zlib1g-dev libssl-dev libreadline-dev libmicrohttpd-dev pkg-config libgsl-dev python3 python3-dev ninja-build

    - name: Configure & Build
      run: |        
        wget https://dl.google.com/android/repository/android-ndk-r25b-linux.zip
        unzip android-ndk-r25b-linux.zip
        export JAVA_AWT_LIBRARY=NotNeeded
        export JAVA_JVM_LIBRARY=NotNeeded
        export JAVA_INCLUDE_PATH=${JAVA_HOME}/include
        export JAVA_AWT_INCLUDE_PATH=${JAVA_HOME}/include
        export JAVA_INCLUDE_PATH2=${JAVA_HOME}/include/linux
        
        export ANDROID_NDK_ROOT=$(pwd)/android-ndk-r25b
        export OPENSSL_DIR=$(pwd)/example/android/third_party/crypto
        
        rm example/android/src/drinkless/org/ton/TonApi.java        
        cd example/android/
        mkdir build
        cd build
        cmake -DTON_ONLY_TONLIB=ON .. -GNinja
        ninja target prepare_cross_compiling
        rm CMakeCache.txt
        ./build-all.sh

    - name: Find & copy binaries
      run: |
        mkdir -p artifacts/tonlib-android-jni        
        cp example/android/src/drinkless/org/ton/TonApi.java artifacts/tonlib-android-jni/
        cp -R example/android/libs/* artifacts/tonlib-android-jni/

    - name: Upload artifacts
      uses: actions/upload-artifact@master
      with:
        name: Tonlib JNI libraries for Android
        path: artifacts
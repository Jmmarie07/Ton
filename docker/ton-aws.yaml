apiVersion: "apps/v1"
kind: StatefulSet
metadata:
  name: validator-engine-pod
  labels:
    name: validator-engine-pod
spec:
  volumeClaimTemplates:
    - metadata:
        name: validator-engine-pvc
      spec:
        storageClassName: gp2
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 400Gi
  serviceName: validator-engine-srv-headless
  replicas: 1
  selector:
    matchLabels:
      name: validator-engine-pod
  template:
    metadata:
      labels:
        name: validator-engine-pod
    spec:
      containers:
        - name: validator-engine-container
          image: ghcr.io/neodix42/ton:latest
          env:
            - name: HOST_IP
              value: "<PUBLIC_IP>"
            - name: PUBLIC_IP
              value: "<PUBLIC_IP>"
            - name: LITESERVER
              value: "true"
          volumeMounts:
            - mountPath: "/var/ton-work/db"
              name: validator-engine-pvc
---
kind: Service
apiVersion: v1
metadata:
  name: validator-engine-srv
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: external
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
spec:
  type: LoadBalancer
  ports:
    - name: validator-udp
      port: 30001
      targetPort: 30001
      protocol: UDP
    - name: console-tcp
      port: 30002
      targetPort: 30002
      protocol: TCP
    - name: ls-tcp
      port: 30003
      targetPort: 30003
      protocol: TCP
  selector:
    name: validator-engine-pod
---
apiVersion: v1
kind: Service
metadata:
  name: validator-engine-srv-headless
spec:
  clusterIP: None
  ports:
    - name: validator-udp
      port: 30001
      targetPort: 30001
      protocol: UDP
    - name: console-tcp
      port: 30002
      targetPort: 30002
      protocol: TCP
    - name: ls-tcp
      port: 30003
      targetPort: 30003
      protocol: TCP
  selector:
    name: validator-engine-pod
